id = "8613956414443496038"
date = 2012-09-29T09:46:07Z
updated = 2012-09-29T09:46:07Z
title = "I agree with a lot of the points in this article s..."
content = "I agree with a lot of the points in this article such as the increase it the complexity of the content, but also disagree about several things. Personally, I believe we can achieve very close to photo-realism using our current rasterization methods while incurring a relatively low-cost. That would obviously exclude things like real-time reflections on non-planar objects.<br /><br />First off, almost every visual effects shot you&#39;ve ever seen, and didn&#39;t realize you saw it, came from ray-tracing. You probably see hundreds of them every day and don&#39;t even notice it, so obviously the inaccuracies are not all that inaccurate.<br /><br />Some things I disagree with in your article are things like were you make it seem like physics and AI having to suffer because of ray-tracing. I have been professionally working on games and other interactive media for several years now and worked professionally in the digital animation and visual effects field for a few years prior to that. Physics and AI have never put much burden on my CPU except when I was intentionally trying to push it to it&#39;s limit. These two things hardly put a burden on the CPU in most games. Why? Because, I can shut off physics and AI calculations for objects beyond a reasonable distance from my camera&#39;s position and turn them back on when I&#39;m getting close to visible distance. Let&#39;s say I have a fairly dense urban level, no photo-realism has to suffer if I decide anything beyond (let&#39;s just say) 1500 meters isn&#39;t going to be seen anyway, so why compute the physics and AI on it?<br /><br />You said, &quot;In any given square mile of a human settlement, there are billions of individual objects, ranging from pine cones, to rocks, to TV sets, to crumbs, all of which technically have physics, and must be kept track of, and rendered, and even more importantly, modeled.&quot;<br /><br />This is true, but...<br /><br />1) In most cases, they actually don&#39;t have to be rendered after a certain distance of the camera because you wouldn&#39;t gain anything even in ray-tracing after a certain distance and is completely negligible. They could at some distance be completely removed from the render solution.<br /><br />2) You can still use LODs for both materials and models. So you can replace a fully reflective material with a specular or cubemapped reflection at a distance where the player won&#39;t notice.<br /><br />3) You don&#39;t have to model each individual rock, pine cone, etc... this is what instances and procedural textures are for (and possibly procedural displacement?) You can model a handful of these items and then place/paint them into your scene.<br /><br />4) You don&#39;t have to have physics on every object, only for those objects that actually need it, IE background items don&#39;t need physics. Small rocks and other debris don&#39;t need physics. Let&#39;s say you have a chain link fence which apparently has a ton of polygons, you still only need a primitive box collider on it which computes very quickly.<br /><br />5) AI for any actor only needs to be computed when that actor is within a certain distance. And things like paths don&#39;t need to be computed every frame.<br /><br />6) Occlusion culling techniques can still be employed. Albeit, it would be a take a little longer for the developer to run the calculation on due to the recursion of reflections and such, but, it would make it run way faster on the gamer&#39;s end.<br /><br />7) You can still use things like lightmapping if your lighting is consistent.<br /><br />...) I could probably go on but, people should get the point.<br /><br /><br />Again, I&#39;m perfectly happy with the rasterization methods we use now and don&#39;t think we&#39;re ready for ray-tracing quite yet, but with the advent of many-core CPUs that have already come and are coming into the market, sparing 4 or 5 cores for my physics and AI, while using a large chunk of them to do the rendering, and a few others for whatever other logic, animation, scene management, cleanup, etc, doesn&#39;t really sound all that unreasonable to me."
[author]
	name = "Nathan Warden"
	uri = "https://www.blogger.com/profile/10967564529854584181"
[author.image]
	source = "//lh3.googleusercontent.com/-855M2nuh64M/AAAAAAAAAAI/AAAAAAAALTo/sFC1HNIEn0c/s32-c/photo.jpg"
	width = "32"
	height = "32"
