content = "You appear to misunderstand what reality is.<br /><br />1. If you are using mutexes at all in your game engine, you have already fucked yourself beyond all hope of redemption. You should NEVER implement any algorithm that doesn&#39;t use some form of lockless or at least obstruction-free implementation.<br /><br />2. Determinism is impossible. Even if floating point errors were not an issue, *networking itself* guarantees that you will have consistency issues no matter what you do, because packet travel times are random, erratic, and sometimes they don&#39;t bother showing up at all. Even if they were perfectly reliable, lag ensures the world state will always be inconsistent with itself no matter what you do. The potential inconsistencies that can arise in a threaded actor-model concurrent system are extremely minor when handled properly, and as a result can simply be dealt with through the same correction algorithms that must deal with floating point inconsistencies and errant packets.<br /><br />I can make a concurrent game engine that is highly efficient and won&#39;t suffer from any significant FPS drops, yet is vastly simpler than what you propose here, because you solve the problem from the wrong end. The future of games will be in engines that use actor-based concurrency models by packaging object information into immutable packets and processing them all using a swath of worker threads using multiple lockless queues that have virtually zero overhead and a single sync point per frame. This is simple, elegant, and is vastly more robust than the hellish complexity you propose. I can even do it for a 2D engine, where the rendering queue is strictly ordered. A 3D game is even easier to pull off, because you can render things wildly out of order using the z-buffer and clipping spaces.<br /><br />This problem is not answered by creating separate threads that do specific things, its done by evaluating everything at the same time in small bursts. This will keep both the CPU and the GPU saturated with tasks without significant complexity. I was speaking of Civ V, not Civ IV, and Civ V pulled more out of the GPU than anyone else EVER DID. So unless you are saying your engine is literally faster than every other engine in the entire industry, because Civ V&#39;s engine is, you really shouldn&#39;t be talking.<br /><br />And yes, that includes Unreal Engine 4, which simply does more fancy things, its raw rendering speed can&#39;t beat Civ V."
date = "2012-10-12T01:58:41+00:00"
id = 8912959532236026106
reply = 2899917955386844286
title = "You appear to misunderstand what reality is.1. I..."
updated = "2012-10-12T01:58:41+00:00"
[author]
name = "Erik McClure"
uri = "https://www.blogger.com/profile/13838708587730716493"
[author.image]
height = 32
source = "//lh5.googleusercontent.com/-4ezLtYpHa-E/AAAAAAAAAAI/AAAAAAAAAQI/rkWVell_uxQ/s32-c/photo.jpg"
width = 32
